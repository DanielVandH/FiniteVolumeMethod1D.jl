var documenterSearchIndex = {"docs":
[{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"CurrentModule = FiniteVolumeMethod1D","category":"page"},{"location":"math/#Mathematical-Details","page":"Mathematical Details","title":"Mathematical Details","text":"","category":"section"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"In this section, we provide some of the mathematical details for discretising the PDEs we consider. Recall that the problems we consider are","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"beginalign*\ndfracpartial upartial t = dfracpartialpartial xleft(D(u)dfracpartial upartial xright) + R(u)  a leq x leq b t_0  t leq t_1 \na_0left(u(a t)right)u(a t) - b_0left(u(a t)right)dfracpartial u(a t)partial x = c_0left(u(a t)right)  t_0  t leq t_1 \na_1left(u(b t)right)u(b t) + b_1left(u(b t)right)dfracpartial u(b t)partial x  =c_1left(u(b t)right)  t_0  t leq t_1 \nu(x 0) = f(x)  a leq x leq b\nendalign*","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"We assume that b_0 b_1 neq 0.","category":"page"},{"location":"math/#Interior-Discretisation","page":"Mathematical Details","title":"Interior Discretisation","text":"","category":"section"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"Let us start by focusing on the discretisation of the PDE itself. We start by defining some grid x_1 ldots x_n for the mesh points, assuming a = x_1  x_2  cdots  x_n = b. The control volumes are defined by intervals w_i e_i, where","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"beginalign*\nw_i = begincases x_1  i=1  dfrac12left(x_i-1 + x_iright)  i=2ldotsn endcases \ne_i = begincases frac12left(x_i + x_i+1right)  i=1ldotsn-1  x_n  i=n endcases \nendalign*","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"The volumes of these control volumes are defined by V_i = e_i - w_i, i=1ldotsn. Now, integrate the PDE over a control volume w_i e_i:","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"beginalign*\nint_w_i^e_i dfracpartial upartial tmathrmdx = int_w_i^e_i dfracpartialpartial xleft(D(u)dfracpartial upartial xright)mathrmdx + int_w_i^e_i R(u)mathrmdx \ndfracmathrm dmathrm dtint_w_i^e_i umathrmdx = Dleft(u(e_i t)right)dfracpartial u(e_i t)partial x - Dleft(u(w_i t)right)dfracpartial u(w_i t)partial x + int_w_i^e_i R(u)mathrmdx \ndfracmathrm dbar u_imathrm dt = frac1V_ileftDleft(u(e_i t)right)dfracpartial u(e_i t)partial x - Dleft(u(w_i t)right)dfracpartial u(w_i t)partial xright + bar R_i\nendalign*","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"where bar u_i = (1V_i)int_w_i^e_i umathrmdx and bar R_i = (1V_i)int_w_i^e_i R(u)mathrmdx. Letting u_i = u(x_i t) and R_i = R(u_i), we make the following approximations:","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"beginalign*\nbeginarrayrcll\nbar u_i approx u_i  i=1ldotsn 6pt\nbar R_i approx R_i  i=1ldotsn 6pt\nDleft(u(e_i t)right) approx dfrac12left(D_i + D_i+1right)quad  i=1ldotsn-1 6pt\nDleft(u(w_i t)right) approx dfrac12left(D_i-1 + D_iright)quad  i=2ldotsn 6pt\ndfracpartial u(e_i t)partial x approx dfracu_i+1 - u_ih_i  i=1ldotsn-1 6pt\ndfracpartial u(w_i t)partial x approx dfracu_i - u_i-1h_i-1  i=2ldotsn \nendarray\nendalign*","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"where h_i = x_i+1 - x_i, i=1ldotsn-1. With these approximations, we find:","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"beginalign*\nfracmathrm du_imathrm dt = frac1V_ileftleft(dfracD_i+D_i+12right)left(dfracu_i+1 - u_ih_iright) - left(dfracD_i-1 + D_i2right)left(dfracu_i - u_i-1h_i-1right)right + R_i\nendalign*","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"for i=2ldotsn-1.","category":"page"},{"location":"math/#Boundary-Discretisation","page":"Mathematical Details","title":"Boundary Discretisation","text":"","category":"section"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"We still need to handle the equations at i=1 and i=n. If we rearrange the boundary condition at x = a, we obtain","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"dfracpartial u(a t)partial x = fraca_0left(u(a t)right)u(a t) - c_0left(u(a t)right)b_0left(u(a t)right)","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"Thus,","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"dfracmathrm du_1mathrm dt = frac1V_1leftleft(dfracD_1 + D_22right)left(dfracu_2 - u_1h_1right) - D(u_1)left(dfraca_0(u_1)u_1 - c_0(u_1)b_0(u_1)right)right + R_1","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"Similarly, the boundary condition at x = b gives ","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"dfracpartial u(b t)partial x = fracc_1left(u(b t)right) - a_1left(u(b t)right)u(b t)b_1left(u(b t)right)","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"so","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"dfracmathrm du_nmathrm dt = frac1V_nleftD(u_n)left(dfracc_1(u_n) - a_1(u_n)u_nb_1(u_n)right) - left(dfracD_n-1 + D_n2right)left(dfracu_n - u_n-1h_n-1right)right + R_n","category":"page"},{"location":"math/#The-Complete-Discretisation","page":"Mathematical Details","title":"The Complete Discretisation","text":"","category":"section"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"Putting all the results together, the complete system of ODEs is","category":"page"},{"location":"math/","page":"Mathematical Details","title":"Mathematical Details","text":"beginalign*\nfracmathrm du_imathrm dt = frac1V_ileftleft(dfracD_i+D_i+12right)left(dfracu_i+1 - u_ih_iright) - left(dfracD_i-1 + D_i2right)left(dfracu_i - u_i-1h_i-1right)right + R_i i=2ldotsn-1 8pt\ndfracmathrm du_1mathrm dt = frac1V_1leftleft(dfracD_1 + D_22right)left(dfracu_2 - u_1h_1right) - D(u_1)left(dfraca_0(u_1)u_1 - c_0(u_1)b_0(u_1)right)right + R_18pt\ndfracmathrm du_nmathrm dt = frac1V_nleftD(u_n)left(dfracc_1(u_n) - a_1(u_n)u_nb_1(u_n)right) - left(dfracD_n-1 + D_n2right)left(dfracu_n - u_n-1h_n-1right)right + R_n\nendalign*","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = FiniteVolumeMethod1D","category":"page"},{"location":"#FiniteVolumeMethod1D","page":"Home","title":"FiniteVolumeMethod1D","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for FiniteVolumeMethod1D. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [FiniteVolumeMethod1D]","category":"page"},{"location":"#FiniteVolumeMethod1D.FVMGeometry","page":"Home","title":"FiniteVolumeMethod1D.FVMGeometry","text":"FVMGeometry{T}\n\nDefinition of the geometry for a finite volume method problem.\n\nFields\n\nmesh_points::T: The mesh points. Must be sorted.\nspacings::T: The spacings between the mesh points. \nvolumes::T: The volumes of the cells defined by the mesh points.\n\nConstructors\n\nTo construct the geometry, you can directly call the default constructor, \n\nFVMGeometry(mesh_points, spacings, volumes)\n\nor you can call the convenience constructor,\n\nFVMGeometry(mesh_points)\n\nwhich will compute the spacings and volumes for you.\n\nSee also FVMProblem.\n\n\n\n\n\n","category":"type"},{"location":"#FiniteVolumeMethod1D.FVMProblem","page":"Home","title":"FiniteVolumeMethod1D.FVMProblem","text":"FVMProblem{T,DF,DP,RF,RP,IC,FT}\n\nDefinition of an FVMProblem.\n\nFields\n\ngeometry::FVMGeometry{T}: The geometry of the problem.\ndiffusion_function::DF: The diffusion function.\ndiffusion_parameters::DP: The parameters for the diffusion function.\nreaction_function::RF: The reaction function.\nreaction_parameters::RP: The parameters for the reaction function.\nreaction_theta::RÎ¸: The parameters for the reaction function that are to be estimated.\ninitial_condition::IC: The initial condition.\ninitial_time::FT: The initial time.\nfinal_time::FT: The final time.\n\nConstructors\n\nYou can use the default constructor, but we also provide the constructor \n\nFVMProblem(;\n    geometry, \n    diffusion_function,\n    diffusion_parameters = nothing,\n    reaction_function = Returns(0.0),\n    reaction_parameters = nothing,\n    initial_condition,\n    initial_time = 0.0,\n    final_time)\n\nwhich provides some default values. Moreover, instead of providing geometry, you can use \n\nFVMProblem(mesh_points; kwargs...)\n\nwhich will construct geometry = FVMGeometry(mesh_points). The kwargs... are as above, except  without geometry of course.\n\nTo solve the FVMProblem, just use solve as you would in DifferentialEquations.jl. For example, \n\nsol = solve(prob, Tsit5(), saveat=0.1)\n\n\n\n\n\n","category":"type"}]
}
